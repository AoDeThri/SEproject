import Mock from 'mockjs'
import { API_CONTEST_PREFIX } from '../src/url-prefixes'

const studentMatchHistory = [
  {
    matchId: 1,
    contestId: 1,
    timeStamp: Date.now(),
    courseId: 1,
    title: 'haha',
    participantNumber: 3,
    startTime: Date.now(),
    endTime: Date.now(),
    chapter: 3,
    description: 'sdgsdfgsdfgsdfsdf',
    rank: 3,
    score: 10,
  },
  {
    matchId: 2,
    contestId: 2,
    timeStamp: Date.now(),
    courseId: 2,
    title: 'haha',
    participantNumber: 3,
    startTime: Date.now(),
    endTime: Date.now(),
    chapter: 3,
    description: 'sdgsdfgsdfgsdfsdf',
    rank: 3,
    score: 10,
  },
  {
    matchId: 3,
    contestId: 3,
    timeStamp: Date.now(),
    courseId: 3,
    title: 'haha',
    participantNumber: 3,
    startTime: Date.now(),
    endTime: Date.now(),
    chapter: 3,
    description: 'sdgsdfgsdfgsdfsdf',
    rank: 3,
    score: 10,
  },
]

const studentMatchDetail = Mock.mock({
  userId: 1,
  contestId: '@integer',
  matchId: 1,
  courseId: '@integer',
  timeStamp: Date.now(),
  title: '@ctitle',
  publisherId: '@integer',
  participantNumber: 3,
  startTime: Date.now(),
  endTime: Date.now(),
  'chapter|1-10': 1,
  description: '@csentence',
  rank: 2,
  'score|1-20': 1,
  participants: [
    {
      userId: '@integer',
      nickname: '@cname',
      avatar: '@image',
      rank: 2,
    },
    {
      userId: 1,
      nickname: '@cname',
      avatar: '@image',
      rank: 1,
    },
    {
      userId: '@integer',
      nickname: '@cname',
      avatar: '@image',
      rank: 3,
    },
  ],
  questionAndAnswers: [
    {
      question: {
        questionId: '@integer',
        questionType: 0,
        'questionChapter|1-10': 0,
        questionContent: '@cparagraph',
        questionAnswer: 'A',
        questionChoiceAContent: '@csentence',
        questionChoiceBContent: '@csentence',
        questionChoiceCContent: '@csentence',
        questionChoiceDContent: '@csentence',
      },
      answer: 'A',
    },
    {
      question: {
        questionId: '@integer',
        questionType: 0,
        'questionChapter|1-10': 0,
        questionContent: '@csentence',
        questionAnswer: 'B',
        questionChoiceAContent: '@csentence',
        questionChoiceBContent: '@csentence',
        questionChoiceCContent: '@csentence',
        questionChoiceDContent: '@csentence',
      },
      answer: 'C',
    },
    {
      question: {
        questionId: '@integer',
        questionType: 0,
        'questionChapter|1-10': 0,
        questionContent: '@csentence',
        questionAnswer: 'C',
        questionChoiceAContent: '@csentence',
        questionChoiceBContent: '@csentence',
        questionChoiceCContent: '@csentence',
        questionChoiceDContent: '@csentence',
      },
      answer: 'C',
    },
    {
      question: {
        questionId: '@integer',
        questionType: 0,
        'questionChapter|1-10': 0,
        questionContent: '@csentence',
        questionAnswer: 'D',
        questionChoiceAContent: '@csentence',
        questionChoiceBContent: '@csentence',
        questionChoiceCContent: '@csentence',
        questionChoiceDContent: '@csentence',
      },
      answer: 'B',
    },
    {
      question: {
        questionId: '@integer',
        questionType: 1,
        'questionChapter|1-10': 0,
        questionContent: '@csentence',
        questionAnswer: 'ABC',
        questionChoiceAContent: '@cparagraph',
        questionChoiceBContent: '@csentence',
        questionChoiceCContent: '@csentence',
        questionChoiceDContent: '@csentence',
      },
      answer: 'AC',
    },
  ],
})

export default {
  [`GET ${API_CONTEST_PREFIX}/matches/:matchId`]: studentMatchDetail,
  [`GET ${API_CONTEST_PREFIX}/matches`]: studentMatchHistory,
}
